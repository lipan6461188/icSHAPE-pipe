#!/usr/bin/env bash

BOLD_s="\x1b[1;39;49m"
RED_s="\x1b[0;31;107m"
END="\x1b[0m"

function print_usage()
{
    echo -e "${BOLD_s}Usage:${END}"
    echo -e "    bwait jobid1 [jobid2 jobid3-jobid4 ...]";
    echo -e "${BOLD_s}Version:${END}"
    echo -e "    2020-01-13"
    echo -e "${BOLD_s}Author:${END}"
    echo -e "    Li Pan (lip16@mails.tsinghua.edu.cn)"
    echo -e "\n"
}

if [ $# -lt 1 ]; then
    print_usage;
    exit;
fi

declare raw_jobIDs=( "$@" )

#declare jobstatus=$(bjobs -noheader ${jobID} 2>/dev/null)
#declare nojob=$(echo $jobstatus | grep "is not found")
#declare RUN=$(echo $jobstatus | grep "RUN")
#declare PEND=$(echo $jobstatus | grep "PEND")
#declare DONE=$(echo $jobstatus | grep "DONE")

declare jobIDs=()
for jobID in ${raw_jobIDs[@]};
do
    if [[ $jobID == *-* ]];
    then
        jobID_range=($(echo $jobID | sed 's/\-/ /'))
        for jobID in $(seq ${jobID_range[0]} ${jobID_range[1]});  #{${jobID_range[0]}..${jobID_range[1]}}; 
        do
            jobIDs+=($jobID)
        done
    else
        jobIDs+=($jobID)
    fi
done
# echo ${jobIDs[@]}

for jobID in ${jobIDs[@]};
do
    while true
    do
        jobstatus=$(bjobs -noheader ${jobID} 2>/dev/null | awk '{print $1"\t"$2"\t"$3"\t"$4}')
        DONE=$(echo $jobstatus | grep "DONE")
        if [ "" != "${DONE}" ];
        then
            break
        fi
        RUN=$(echo $jobstatus | grep "RUN")
        PEND=$(echo $jobstatus | grep "PEND")
        if [ "" == "${RUN}" ] && [ "" == "${PEND}" ]; then
            break
        fi

        sleep 0.1;
    done
done
